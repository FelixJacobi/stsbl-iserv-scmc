#!/usr/bin/perl -T -CSDAL

use warnings;
use strict;
use Bytes::Random::Secure;
use IServ::DB;
use Stsbl::IServ::IO;
#use Stsbl::IServ::SCP;
use Stsbl::IServ::Security;

my $m_ip = qr/[\d.:]{1,64}/;

my $login_pwd = $ENV{PASSWORD} // $ENV{SESSPW};
my ($login_ip) = ($ENV{IP} // "") =~ /^($m_ip)$/;
my ($login_ip_fwd) = ($ENV{IPFWD} // "") =~ /^($m_ip)$/;
my ($scmc_token, $scmc_sessionpw) = ($ENV{SCMC_SESSIONTOKEN}, $ENV{SCMC_SESSIONPW});
undef %ENV;
$ENV{PATH} = "/usr/sbin:/usr/bin:/sbin:/bin";

if (@ARGV < 2)
{
  print STDERR "Usage: scmc_get_data LOGIN SERVERID\n";
  print STDERR "Environment: PASSWORD, IP, IPWD, SCMC_SESSIONTOKEN, SCMC_SESSIONPW\n";
  print STDERR "Return: Folder path of created zip file on STDOUT.\n";
  exit 1;
}

my ($login_act, $server_id) = @ARGV;

set_ips $login_ip, $login_ip_fwd;
set_credentials $login_act, $login_pwd;
sessauth_auth "scmc_get_data";

# permission check
req_auth;
req_priv "scmc_access_frontend";
IServ::DB::Do "SELECT 1 FROM scmc_sessions WHERE sessiontoken = ? AND sessionpw = ? AND act = ? LIMIT 1", $scmc_token, $scmc_sessionpw, $login_act 
  or Stsbl::IServ::IO::error "Invalid scmc session data!";

# TODO
my $server_ip = "10.5.6.1";
my $server_user = "root";
my $server_key = "/var/lib/iserv/config/id_rsa";
my $random = new Bytes::Random::Secure();

my $dest_dir = "/tmp/stsbl-iserv-scmc-".$random->string_from('0123456789', 10)."/";
my $dest_zip = "/tmp/stsbl-iserv-scmc-".$random->string_from('0123456789', 10).".zip";

# untaint variables (TODO why is this neccessary?!)
if ($dest_dir =~ /^(.*)$/) {
  $dest_dir = $1;
} else {
  die "Failed to untaint data!";
}
if ($dest_zip =~ /^(.*)$/) {
  $dest_zip = $1;
} else {
  die "Failed to untaint data!";
}

# Should never happen
die "Insecure destination!" if -d $dest_dir;
die "Insecure zip path!" if -f $dest_zip;

mkdir $dest_dir, 00600;
# Net::SCP::Expect cannot handle directories :/
#Stsbl::IServ::SCP::scp $server_ip, ":/Zeugnisse", $dest_dir;
system "scp", "-i", $server_key, "-o", 
  "StrictHostKeyChecking=no", "-o", "UserKnownHostsFile=/dev/null",
  "-o", "ConnectTimeout=30",
  "-o", "LogLevel=ERROR",
  "-o", "PreferredAuthentications=publickey",
  "-r",
  "$server_user\@$server_ip:/Zeugnisse",
  $dest_dir;

chdir $dest_dir or die "Failed to chdir to $dest_dir: $!";
system "zip", "-r", $dest_zip, "Zeugnisse/";
my (undef, undef, $www_data_uid) = getpwnam "www-data";
chown $www_data_uid, 0, $dest_zip;

unlink $dest_dir;
print "path=$dest_zip\n";
